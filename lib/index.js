"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.X_OK=exports.W_OK=exports.R_OK=exports.F_OK=void 0;exports.access=access;exports.accessSync=accessSync;exports.appendFile=appendFile;exports.appendFileSync=appendFileSync;exports.chmod=chmod;exports.chmodSync=chmodSync;exports.chown=chown;exports.chownSync=chownSync;exports.close=close;exports.closeSync=closeSync;exports.constants=void 0;exports.copyFile=copyFile;exports.copyFileSync=copyFileSync;exports.createReadStream=createReadStream;exports.createWriteStream=createWriteStream;exports.fchmod=fchmod;exports.fchmodSync=fchmodSync;exports.fchown=fchown;exports.fchownSync=fchownSync;exports.fdatasync=fdatasync;exports.fdatasyncSync=fdatasyncSync;exports.fstat=fstat;exports.fstatSync=fstatSync;exports.fsync=fsync;exports.fsyncSync=fsyncSync;exports.ftruncate=ftruncate;exports.ftruncateSync=ftruncateSync;exports.futimes=futimes;exports.futimesSync=futimesSync;exports.lchown=lchown;exports.lchownSync=lchownSync;exports.link=link;exports.linkSync=linkSync;exports.lstat=lstat;exports.lstatSync=lstatSync;exports.mkdir=mkdir;exports.mkdirSync=mkdirSync;exports.mkdtemp=mkdtemp;exports.mkdtempSync=mkdtempSync;exports.open=open;exports.openSync=openSync;exports.read=read;exports.readFile=readFile;exports.readFileSync=readFileSync;exports.readSync=readSync;exports.readdir=readdir;exports.readdirSync=readdirSync;exports.readlink=readlink;exports.readlinkSync=readlinkSync;exports.realpath=realpath;exports.realpathSync=realpathSync;exports.rename=rename;exports.renameSync=renameSync;exports.rmdir=rmdir;exports.rmdirSync=rmdirSync;exports.stat=stat;exports.statSync=statSync;exports.symlink=symlink;exports.symlinkSync=symlinkSync;exports.truncate=truncate;exports.truncateSync=truncateSync;exports.unlink=unlink;exports.unlinkSync=unlinkSync;exports.unwatchFile=unwatchFile;exports.utimes=utimes;exports.utimesSync=utimesSync;exports.watch=watch;exports.watchFile=watchFile;exports.write=write;exports.writeFile=writeFile;exports.writeFileSync=writeFileSync;exports.writeSync=writeSync;var _fs=_interopRequireDefault(require("fs"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function access(path,mode){return new Promise((resolve,reject)=>{_fs.default.access(path,mode,e=>!e?resolve():reject(e));});}function accessSync(path,mode){return new Promise((resolve,reject)=>{try{resolve(_fs.default.accessSync(path,mode));}catch(e){reject(e);}});}function appendFile(file,data,options){return new Promise((resolve,reject)=>{_fs.default.appendFile(file,data,options,e=>!e?resolve():reject(e));});}function appendFileSync(file,data,options){return new Promise((resolve,reject)=>{try{resolve(_fs.default.appendFileSync(file,data,options));}catch(e){reject(e);}});}function chmod(path,mode){return new Promise((resolve,reject)=>{_fs.default.chmod(path,mode,e=>!e?resolve():reject(e));});}function chmodSync(path,mode){return new Promise((resolve,reject)=>{try{resolve(_fs.default.chmodSync(path,mode));}catch(e){reject(e);}});}function chown(path,uid,gid){return new Promise((resolve,reject)=>{_fs.default.chown(path,uid,gid,e=>!e?resolve():reject(e));});}function chownSync(path,uid,gid){return new Promise((resolve,reject)=>{try{resolve(_fs.default.chownSync(path,uid,gid));}catch(e){reject(e);}});}function close(fd){return new Promise((resolve,reject)=>{_fs.default.close(fd,e=>!e?resolve():reject(e));});}function closeSync(fd){return new Promise((resolve,reject)=>{try{resolve(_fs.default.closeSync(fd));}catch(e){reject(e);}});}function copyFile(src,dest,flags){return new Promise((resolve,reject)=>{_fs.default.copyFile(src,dest,flags,e=>!e?resolve():reject(e));});}function copyFileSync(src,dest,flags){return new Promise((resolve,reject)=>{try{resolve(_fs.default.copyFileSync(src,dest,flags));}catch(e){reject(e);}});}function createReadStream(path,options){return Promise.resolve(_fs.default.createReadStream(path,options));}function createWriteStream(path,options){return Promise.resolve(_fs.default.createWriteStream(path,options));}function fchmod(fd,mode){return new Promise((resolve,reject)=>{_fs.default.fchmod(fd,mode,e=>!e?resolve():reject(e));});}function fchmodSync(fd,mode){return new Promise((resolve,reject)=>{try{resolve(_fs.default.fchmodSync(fd,mode));}catch(e){reject(e);}});}function fchown(fd,uid,gid){return new Promise((resolve,reject)=>{_fs.default.fchown(fd,uid,gid,e=>!e?resolve():reject(e));});}function fchownSync(fd,uid,gid){return new Promise((resolve,reject)=>{try{resolve(_fs.default.fchownSync(fd,uid,gid));}catch(e){reject(e);}});}function fdatasync(fd){return new Promise((resolve,reject)=>{_fs.default.fdatasync(fd,e=>!e?resolve():reject(e));});}function fdatasyncSync(fd){return new Promise((resolve,reject)=>{try{resolve(_fs.default.fdatasyncSync(fd));}catch(e){reject(e);}});}function fstat(fd){return new Promise((resolve,reject)=>{_fs.default.fstat(fd,(e,stats)=>!e?resolve(stats):reject(e));});}function fstatSync(fd){return new Promise((resolve,reject)=>{try{resolve(_fs.default.fstatSync(fd));}catch(e){reject(e);}});}function fsync(fd){return new Promise((resolve,reject)=>{_fs.default.fsync(fd,e=>!e?resolve():reject(e));});}function fsyncSync(fd){return new Promise((resolve,reject)=>{try{resolve(_fs.default.fsyncSync(fd));}catch(e){reject(e);}});}function ftruncate(fd,len){return new Promise((resolve,reject)=>{_fs.default.ftruncate(fd,len,e=>!e?resolve():reject(e));});}function ftruncateSync(fd,len){return new Promise((resolve,reject)=>{try{resolve(_fs.default.ftruncateSync(fd,len));}catch(e){reject(e);}});}function futimes(fd,atime,mtime){return new Promise((resolve,reject)=>{_fs.default.futimes(fd,atime,mtime,e=>!e?resolve():reject(e));});}function futimesSync(fd,atime,mtime){return Promise.resolve(_fs.default.futimesSync(fd,atime,mtime));}function lchown(path,uid,gid){return new Promise((resolve,reject)=>{_fs.default.lchown(path,uid,gid,e=>!e?resolve():reject(e));});}function lchownSync(path,uid,gid){return new Promise((resolve,reject)=>{try{resolve(_fs.default.lchownSync(path,uid,gid));}catch(e){reject(e);}});}function link(srcpath,dstpath){return new Promise((resolve,reject)=>{_fs.default.link(srcpath,dstpath,e=>!e?resolve():reject(e));});}function linkSync(srcpath,dstpath){return new Promise((resolve,reject)=>{try{resolve(_fs.default.linkSync(srcpath,dstpath));}catch(e){reject(e);}});}function lstat(path){return new Promise((resolve,reject)=>{_fs.default.lstat(path,(e,stats)=>!e?resolve(stats):reject(e));});}function lstatSync(path){return Promise.resolve(_fs.default.lstatSync(path));}function mkdir(path,mode){return new Promise((resolve,reject)=>{_fs.default.mkdir(path,mode,e=>!e?resolve():reject(e));});}function mkdirSync(path,mode){return new Promise((resolve,reject)=>{try{resolve(_fs.default.mkdirSync(path,mode));}catch(e){reject(e);}});}function mkdtemp(prefix,options){return new Promise((resolve,reject)=>{_fs.default.mkdtemp(prefix,options,(e,folder)=>!e?resolve(folder):reject(e));});}function mkdtempSync(prefix,options){return new Promise((resolve,reject)=>{try{resolve(_fs.default.mkdtempSync(prefix,options));}catch(e){reject(e);}});}function open(path,flags,mode){return new Promise((resolve,reject)=>{_fs.default.open(path,flags,mode,(e,fd)=>!e?resolve(fd):reject(e));});}function openSync(path,flags,mode){return new Promise((resolve,reject)=>{try{resolve(_fs.default.openSync(path,flags,mode));}catch(e){reject(e);}});}function read(fd,buffer,offset,length,position){return new Promise((resolve,reject)=>{_fs.default.read(fd,buffer,offset,length,position,(e,bytesRead,buffer)=>!e?resolve({bytesRead,buffer}):reject(e));});}function readSync(fd,buffer,offset,length,position){return Promise.resolve(_fs.default.readSync(fd,buffer,offset,length,position));}function readdir(path,options){return new Promise((resolve,reject)=>{_fs.default.readdir(path,options,(e,files)=>!e?resolve(files):reject(e));});}function readdirSync(path,options){return Promise.resolve(_fs.default.readdirSync(path,options));}function readFile(file,options){return new Promise((resolve,reject)=>{_fs.default.readFile(file,options,(e,data)=>!e?resolve(data):reject(e));});}function readFileSync(file,options){return new Promise((resolve,reject)=>{try{resolve(_fs.default.readFileSync(file,options));}catch(e){reject(e);}});}function readlink(path,options){return new Promise((resolve,reject)=>{_fs.default.readlink(path,options,(e,linkString)=>!e?resolve(linkString):reject(e));});}function readlinkSync(path,options){return new Promise((resolve,reject)=>{try{resolve(_fs.default.readlinkSync(path,options));}catch(e){reject(e);}});}function realpath(path,options){return new Promise((resolve,reject)=>{_fs.default.realpath(path,options,(e,resolvedPath)=>!e?resolve(resolvedPath):reject(e));});}function realpathSync(path,options){return new Promise((resolve,reject)=>{try{resolve(_fs.default.realpathSync(path,options));}catch(e){reject(e);}});}function rename(oldPath,newPath){return new Promise((resolve,reject)=>{_fs.default.rename(oldPath,newPath,e=>!e?resolve():reject(e));});}function renameSync(oldPath,newPath){return new Promise((resolve,reject)=>{try{resolve(_fs.default.renameSync(oldPath,newPath));}catch(e){reject(e);}});}function rmdir(path){return new Promise((resolve,reject)=>{_fs.default.rmdir(path,e=>!e?resolve():reject(e));});}function rmdirSync(path){return new Promise((resolve,reject)=>{try{resolve(_fs.default.rmdirSync(path));}catch(e){reject(e);}});}function stat(path){return new Promise((resolve,reject)=>{_fs.default.stat(path,(e,stat)=>!e?resolve(stat):reject(e));});}function statSync(path){return Promise.resolve(_fs.default.statSync(path));}function symlink(target,path,type){return new Promise((resolve,reject)=>{_fs.default.symlink(target,path,type,e=>!e?resolve():reject(e));});}function symlinkSync(target,path,type){return Promise.resolve(_fs.default.symlinkSync(target,path,type));}function truncate(path,len){return new Promise((resolve,reject)=>{_fs.default.truncate(path,len,e=>!e?resolve():reject(e));});}function truncateSync(path,len){return new Promise((resolve,reject)=>{try{resolve(_fs.default.truncateSync(path,len));}catch(e){reject(e);}});}function unlink(path){return new Promise((resolve,reject)=>{_fs.default.unlink(path,e=>!e?resolve():reject(e));});}function unlinkSync(path){return new Promise((resolve,reject)=>{try{resolve(_fs.default.unlinkSync(path));}catch(e){reject(e);}});}function unwatchFile(filename,listener){return Promise.resolve(_fs.default.unwatchFile(filename,listener));}function utimes(path,atime,mtime){return new Promise((resolve,reject)=>{_fs.default.utimes(path,atime,mtime,e=>!e?resolve():reject(e));});}function utimesSync(path,atime,mtime){return Promise.resolve(_fs.default.utimesSync(path,atime,mtime));}function watch(filename,options,listener){return Promise.resolve(_fs.default.watch(filename,options,listener));}function watchFile(filename,options,listener){return Promise.resolve(_fs.default.watchFile(filename,options,listener));}function write(fd,data,v1,v2,v3){return new Promise((resolve,reject)=>{function c(e){return!e?resolve():reject(e);}if(data instanceof Buffer){_fs.default.write(fd,data,v1,v2,v3,c);}else{_fs.default.write(fd,data,v1,v2,c);}});}function writeFile(file,data,options){return new Promise((resolve,reject)=>{_fs.default.writeFile(file,data,options,e=>!e?resolve():reject(e));});}function writeFileSync(file,data,options){return new Promise((resolve,reject)=>{try{resolve(_fs.default.writeFileSync(file,data,options));}catch(e){reject(e);}});}function writeSync(fd,data,v1,v2,v3){return new Promise((resolve,reject)=>{try{if(data instanceof Buffer){resolve(_fs.default.writeSync(fd,data,v1,v2,v3));}else{resolve(_fs.default.writeSync(fd,data,v1,v2));}}catch(e){reject(e);}});}const F_OK=_fs.default.F_OK;exports.F_OK=F_OK;const R_OK=_fs.default.R_OK;exports.R_OK=R_OK;const W_OK=_fs.default.W_OK;exports.W_OK=W_OK;const X_OK=_fs.default.X_OK;exports.X_OK=X_OK;const constants=_fs.default.constants;exports.constants=constants;